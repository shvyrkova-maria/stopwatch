{"version":3,"sources":["components/App.module.css","utils/getTimeComponents.js","components/App.jsx","index.js"],"names":["module","exports","getTimeComponents","time","pad","value","String","padStart","hours","Math","floor","mins","secs","pause","BehaviorSubject","App","useState","сountValue","setCountValue","isCount","setIsCount","useEffect","timerInterval$","interval","pipe","map","timerSub","switchMap","EMPTY","subscribe","res","prev","unsubscribe","complete","handleStartStopClick","next","className","s","container","display","controls","type","onClick","button","e","clickEvent$","fromEvent","target","debounce$","debounceTime","buffer","list","length","filter","x","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,QAAU,qBAAqB,SAAW,sBAAsB,OAAS,sB,oKCDjHC,EAAoB,SAAAC,GAC/B,SAASC,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAEnC,IAAMC,EAAQJ,EAAIK,KAAKC,MAAOP,EAAI,MAAL,OACvBQ,EAAOP,EAAIK,KAAKC,MAAOP,EAAI,KAAL,MACtBS,EAAOR,EAAIK,KAAKC,MAAOP,EAAI,IAAkB,MACnD,MAAM,IAAN,OAAWK,EAAX,YAAoBG,EAApB,YAA4BC,I,wBCDxBC,EAAQ,IAAIC,KAAgB,GAqEnBC,MAnEf,WACE,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,IAAMC,EAAiBC,YAAS,KAAMC,KAAKC,aAAI,SAAApB,GAAK,OAAY,IAARA,MAGlDqB,EAFSb,EAAMW,KAAKG,aAAU,SAAAd,GAAK,OAAKA,EAAQe,IAAQN,MAEtCO,WAAU,SAAAC,GAChCX,GAAWD,GAAc,SAAAa,GAAI,OAAIA,EAAOD,QAG1C,OAAO,WACLJ,EAASM,cACTN,EAASO,cAEV,CAACd,IAEJ,IAAMe,EAAuB,WAC3Bd,GAAYD,GACZN,EAAMsB,MAAK,GACPhB,GACFD,EAAc,IA2BlB,OACE,sBAAKkB,UAAWC,IAAEC,UAAlB,UACE,qBAAKF,UAAWC,IAAEE,QAAlB,SAA4BrC,EAAkBe,KAC9C,sBAAKmB,UAAWC,IAAEG,SAAlB,UACE,wBAAQC,KAAK,SAASC,QAASR,EAAsBE,UAAWC,IAAEM,OAAlE,SACGxB,EAAU,OAAS,UAEtB,wBAAQsB,KAAK,SAASC,QA9BJ,SAAAE,GACtB,IAAMC,EAAcC,YAAUF,EAAEG,OAAQ,SAClCC,EAAYH,EAAYrB,KAAKyB,YAAa,MACjCJ,EAAYrB,KACzB0B,YAAOF,GACPvB,aAAI,SAAA0B,GACF,OAAOA,EAAKC,UAEdC,aAAO,SAAAC,GAAC,OAAU,IAANA,MAGPzB,WAAU,WACfhB,EAAMsB,MAAK,GACXf,GAAW,OAiBuCgB,UAAWC,IAAEM,OAA7D,kBAGA,wBAAQF,KAAK,SAASC,QAhBH,WACvBxB,EAAc,GACdgB,IACAd,GAAW,IAa0CgB,UAAWC,IAAEM,OAA9D,0BC9DRY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e1c12508.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__30n0j\",\"display\":\"App_display__go3Ji\",\"controls\":\"App_controls__3KJwh\",\"button\":\"App_button__3zqSk\"};","export const getTimeComponents = time => {\n  function pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  return ` ${hours}:${mins}:${secs}`;\n};\n","import { BehaviorSubject, interval, EMPTY, fromEvent } from 'rxjs';\nimport { useState, useEffect } from 'react';\nimport { map, switchMap, debounceTime, buffer, filter } from 'rxjs/operators';\nimport { getTimeComponents } from 'utils/getTimeComponents';\nimport s from 'components/App.module.css';\n\nconst pause = new BehaviorSubject(false);\n\nfunction App() {\n  const [сountValue, setCountValue] = useState(0);\n  const [isCount, setIsCount] = useState(false);\n\n  useEffect(() => {\n    const timerInterval$ = interval(1000).pipe(map(value => value * 1000));\n    const paused = pause.pipe(switchMap(pause => (pause ? EMPTY : timerInterval$)));\n\n    const timerSub = paused.subscribe(res => {\n      isCount && setCountValue(prev => prev + res);\n    });\n\n    return () => {\n      timerSub.unsubscribe();\n      timerSub.complete();\n    };\n  }, [isCount]);\n\n  const handleStartStopClick = () => {\n    setIsCount(!isCount);\n    pause.next(false);\n    if (isCount) {\n      setCountValue(0);\n    }\n  };\n\n  const handleWaitClick = e => {\n    const clickEvent$ = fromEvent(e.target, 'click');\n    const debounce$ = clickEvent$.pipe(debounceTime(250));\n    const click$ = clickEvent$.pipe(\n      buffer(debounce$),\n      map(list => {\n        return list.length;\n      }),\n      filter(x => x === 2),\n    );\n\n    click$.subscribe(() => {\n      pause.next(true);\n      setIsCount(false);\n    });\n  };\n\n  const handleResetClick = () => {\n    setCountValue(0);\n    handleStartStopClick();\n    setIsCount(true);\n  };\n\n  return (\n    <div className={s.container}>\n      <div className={s.display}>{getTimeComponents(сountValue)}</div>\n      <div className={s.controls}>\n        <button type=\"button\" onClick={handleStartStopClick} className={s.button}>\n          {isCount ? 'Stop' : 'Start'}\n        </button>\n        <button type=\"button\" onClick={handleWaitClick} className={s.button}>\n          Wait\n        </button>\n        <button type=\"button\" onClick={handleResetClick} className={s.button}>\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}